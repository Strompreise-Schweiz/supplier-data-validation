name: "Reusable: Validate static tariff"

on:
  workflow_call:
    inputs:
      tariff_schema_version:
        description: "Tariff schema version to validate against (e.g. v1, v2)"
        required: true
        default: "v1"
        type: string
      tariff_name:
        description: "Expected tariff name to enforce (e.g. 'emn-50')"
        required: true
        type: string
      tariff_year:
        description: "Expected tariff file name to enforce (e.g. '2025')"
        required: true
        type: string

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      # 1) Check out the customer repository
      - uses: actions/checkout@v4

      # 2) Set up Node.js 20
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install ajv + formats
        run: npm i -g ajv-cli@5 ajv-formats

      # 3) Check tariff folder name and year  
      - name: Validate inputs
        shell: bash
        run: |
          set -euo pipefail

          # tariff_name: simple sanity check (lowercase, digits, hyphen; at least 3 chars)
          if ! [[ "${{ inputs.tariff_name }}" =~ ^[a-z0-9-]{3,}$ ]]; then
            echo "Invalid 'tariff_name': '${{ inputs.tariff_name }}' (expected lowercase letters, digits, hyphens; min length 3)"
            exit 1
          fi

          # tariff_year: must be a 4-digit year
          if ! [[ "${{ inputs.tariff_year }}" =~ ^[0-9]{4}$ ]]; then
            echo "Invalid 'tariff_year': '${{ inputs.tariff_year }}' (expected 4 digits like 2025)"
            exit 1
          fi

      # 4) Check if tariff really exists 
      - name: Set env paths
        id: paths
        shell: bash
        run: |
          set -euo pipefail
          TARIFF_PATH="data/tariffs/${{ inputs.tariff_name }}/${{ inputs.tariff_year }}.json"
          echo "TARIFF_PATH=${TARIFF_PATH}" >> "$GITHUB_ENV"
          echo "Tariff file path: ${TARIFF_PATH}"

      - name: Ensure tariff file exists
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -f "${TARIFF_PATH}" ]]; then
            echo "Tariff file not found: ${TARIFF_PATH}"
            exit 1
          fi

      # 5) Download tariff schema (version from input)
      - name: Download tariff schema
        run: |
          curl -fsSL \
            https://raw.githubusercontent.com/Strompreise-Schweiz/supplier-data-validation/main/tariffs/static/${{ inputs.tariff_schema_version }}/tariff.schema.json \
            -o _tariff.schema.json

      # 6) Validate tariff.json (strict mode)
      - name: Validate tariff.json
        run: >
          ajv validate
          -c ajv-formats
          -s _tariff.schema.json
          -d data/tariffs/${{ inputs.tariff_name }}/${{ inputs.tariff_year }}.json
          --spec=draft2020
          --strict=true
          --data
